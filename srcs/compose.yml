services:

  nginx:
    build:
      context: ../srcs/services/nginx
      dockerfile: Dockerfile
    ports:
      - "443:443"
    volumes:
      - /home/lbastien/data/wp_files:/var/www/html
      - /home/lbastien/data/ssl:/etc/ssl
      - /home/lbastien/data/cv_files:/var/www/resume
    networks:
      - internal
    restart: always
    depends_on:
      - php

  php:
    env_file: ".env"
    build:
      context: ../srcs/services/php
      dockerfile: Dockerfile
    volumes:
      - /home/lbastien/data/wp_files:/var/www/html
    networks:
      - internal
    restart: always
    depends_on:
      - mariadb

  mariadb:
    env_file: ".env"
    build:
      context: ../srcs/services/mariadb
      dockerfile: Dockerfile
    volumes:
      - /home/lbastien/data/database:/var/lib/mysql
    networks:
      - internal
    restart: always

  ftp:
    env_file: ".env"
    build:
      context: ../srcs/services/ftp
      dockerfile: Dockerfile
      args:
        FTP_USER: ${FTP_USER}
        FTP_PASS: ${FTP_PASS}
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    volumes:
      - /home/lbastien/data/wp_files:/home/ftp
    networks:
      - internal
    restart: always

  redis:
    build:
      context: ../srcs/services/redis
      dockerfile: Dockerfile
    networks:
      - internal
    restart: always

  adminer:
    build:
      context: ../srcs/services/adminer
      dockerfile: Dockerfile
    networks:
      - internal
    restart: always
    depends_on:
      - mariadb

  mailhog:
    build:
      context: ../srcs/services/mailhog
      dockerfile: Dockerfile
    networks:
      - internal
    restart: always

networks:
  internal:
    driver: bridge
